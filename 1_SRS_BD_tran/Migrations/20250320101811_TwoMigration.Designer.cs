// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _1_lab_BD_tran;

#nullable disable

namespace _1_lab_BD_tran.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250320101811_TwoMigration")]
    partial class TwoMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("_1_lab_BD_tran.accounts", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("family")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("tags")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("user_id")
                        .HasName("accounts_pkey");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("_1_lab_BD_tran.tags", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex(new[] { "title" }, "title_Index")
                        .IsUnique();

                    b.ToTable("tags");
                });

            modelBuilder.Entity("_1_lab_BD_tran.users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("registration_date")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex(new[] { "login" }, "login_Index")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("_1_lab_BD_tran.accounts", b =>
                {
                    b.HasOne("_1_lab_BD_tran.users", "Users")
                        .WithOne("Accounts")
                        .HasForeignKey("_1_lab_BD_tran.accounts", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_id_foreign");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("_1_lab_BD_tran.users", b =>
                {
                    b.Navigation("Accounts")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
